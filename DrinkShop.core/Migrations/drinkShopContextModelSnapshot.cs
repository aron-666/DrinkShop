// <auto-generated />
using System;
using DrinkShop.core.Models.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DrinkShop.core.Migrations
{
    [DbContext(typeof(drinkShopContext))]
    partial class drinkShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DrinkShop.core.Models.Db.Ice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.HasKey("Id");

                    b.ToTable("Ice");
                });

            modelBuilder.Entity("DrinkShop.core.Models.Db.Items", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<int>("AddPrice")
                        .HasColumnType("int(11)");

                    b.Property<int>("BasePrice")
                        .HasColumnType("int(11)");

                    b.Property<bool>("CanIce")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSize")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("CanSweetness")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DrinkShop.core.Models.Db.OrderItems", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Count")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("IdIce")
                        .HasColumnName("ID_Ice")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdItem")
                        .HasColumnName("ID_Item")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdOrder")
                        .HasColumnName("ID_Order")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdSize")
                        .HasColumnName("ID_Size")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdSweetness")
                        .HasColumnName("ID_Sweetness")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.HasKey("Id");

                    b.HasIndex("IdIce")
                        .HasName("ID_Ice");

                    b.HasIndex("IdItem")
                        .HasName("ID_Item");

                    b.HasIndex("IdOrder")
                        .HasName("ID_Order");

                    b.HasIndex("IdSize")
                        .HasName("ID_Size");

                    b.HasIndex("IdSweetness")
                        .HasName("ID_Sweetness");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DrinkShop.core.Models.Db.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnName("ClientID")
                        .HasColumnType("varchar(250)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<bool>("Payment")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.Property<int>("Price")
                        .HasColumnType("int(11)");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DrinkShop.core.Models.Db.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.HasKey("Id");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("DrinkShop.core.Models.Db.Sweetness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.Property<string>("Remarks")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_unicode_520_ci");

                    b.HasKey("Id");

                    b.ToTable("Sweetness");
                });

            modelBuilder.Entity("DrinkShop.core.Models.Db.OrderItems", b =>
                {
                    b.HasOne("DrinkShop.core.Models.Db.Ice", "IdIceNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdIce")
                        .HasConstraintName("orderitems_ibfk_1")
                        .IsRequired();

                    b.HasOne("DrinkShop.core.Models.Db.Items", "IdItemNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdItem")
                        .HasConstraintName("orderitems_ibfk_2")
                        .IsRequired();

                    b.HasOne("DrinkShop.core.Models.Db.Orders", "IdOrderNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdOrder")
                        .HasConstraintName("orderitems_ibfk_3")
                        .IsRequired();

                    b.HasOne("DrinkShop.core.Models.Db.Size", "IdSizeNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdSize")
                        .HasConstraintName("orderitems_ibfk_4")
                        .IsRequired();

                    b.HasOne("DrinkShop.core.Models.Db.Sweetness", "IdSweetnessNavigation")
                        .WithMany("OrderItems")
                        .HasForeignKey("IdSweetness")
                        .HasConstraintName("orderitems_ibfk_5")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
